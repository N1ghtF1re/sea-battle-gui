unit Game;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.Grids, Vcl.ExtCtrls, Vcl.StdCtrls;

type
  TFieldForm = class(TForm)
    player1Field: TStringGrid;
    player2Field: TStringGrid;
    Panel2: TPanel;
    pn2: TPanel;
    pnName1: TLabel;
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure FormShow(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure player1FieldDrawCell(Sender: TObject; ACol, ARow: Integer;
      Rect: TRect; State: TGridDrawState);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  FieldForm: TFieldForm;

implementation

{$R *.dfm}

uses MainPage, CreateField;

procedure TFieldForm.FormClose(Sender: TObject; var Action: TCloseAction);
begin
  form1.close;
  Form3.close;
end;

procedure TFieldForm.FormCreate(Sender: TObject);
var i:byte;
begin
  for i:=1 to 10 do
  begin
    player1Field.Cells[i,0]:=IntToStr(i);
    player1Field.Cells[0,i]:=Chr(1039+i);
    player2Field.Cells[i,0]:=IntToStr(i);
    player2Field.Cells[0,i]:=Chr(1039+i);
  end;
  player2Field.Cells[0,10]:='Ê';
  player1Field.Cells[0,10]:='Ê';
end;

procedure TFieldForm.FormShow(Sender: TObject);
begin
  pnName1.Caption := Form3.UserName;
  // ShowMessage(Form3.UserName);
end;

procedure TFieldForm.player1FieldDrawCell(Sender: TObject; ACol, ARow: Integer;
  Rect: TRect; State: TGridDrawState);
begin
with player1Field do
  begin
    if (Cells[ACol,ARow] = '')   then
    begin
      Canvas.Brush.Color:=clBlue;
      Rect.Left:=Rect.Left-5;
      Canvas.FillRect(Rect);
    end;
    if (Cells[ACol,ARow] = '') then
    begin
      Canvas.Brush.Color:=clWhite;
      Rect.Left:=Rect.Left-5;
      Canvas.FillRect(Rect);
    end;
    if ((ACol = 0) and (ARow = 0)) then
    begin
      Canvas.Brush.Color:=clWhite;
      Rect.Left:=Rect.Left-5;
      Canvas.FillRect(Rect);
    end;
  end;
end;

end.
