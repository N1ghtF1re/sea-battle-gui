unit Game;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.Grids, Vcl.ExtCtrls, Vcl.StdCtrls,
  Vcl.Imaging.pngimage;

type
  TFieldForm = class(TForm)
    player1Field: TStringGrid;
    player2Field: TStringGrid;
    Panel2: TPanel;
    pn2: TPanel;
    pnName1: TLabel;
    imgAI: TImage;
    Label1: TLabel;
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure FormShow(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure player1FieldDrawCell(Sender: TObject; ACol, ARow: Integer;
      Rect: TRect; State: TGridDrawState);
    procedure player2FieldDrawCell(Sender: TObject; ACol, ARow: Integer;
      Rect: TRect; State: TGridDrawState);
    procedure player2FieldMouseDown(Sender: TObject; Button: TMouseButton;
      Shift: TShiftState; X, Y: Integer);

  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  FieldForm: TFieldForm;
  currplayer: 1..2;

implementation

{$R *.dfm}

uses MainPage, CreateField;

procedure TFieldForm.FormClose(Sender: TObject; var Action: TCloseAction);
begin
  form1.close;
  Form3.close;
end;

procedure TFieldForm.FormCreate(Sender: TObject);
var i:byte;
begin
  for i:=1 to 10 do
  begin
    player1Field.Cells[i,0]:=IntToStr(i);
    player1Field.Cells[0,i]:=Chr(1039+i);
    player2Field.Cells[i,0]:=IntToStr(i);
    player2Field.Cells[0,i]:=Chr(1039+i);
  end;
  player2Field.Cells[0,10]:=' ';
  player1Field.Cells[0,10]:=' ';
  currplayer:=1;
end;

procedure TFieldForm.FormShow(Sender: TObject);
var i,j:Byte;
begin
  pnName1.Caption := Form3.UserName;
  // ShowMessage(Form3.UserName);
  for i:=1 to 10 do
  begin
    for j:=1 to 10 do
    begin
      Case Form1.P1F[i,j] of
        'M' : player1Field.Cells[i,j] := '';
        'K' : player1Field.Cells[i,j] := 'S';
      End;
      Case Form1.P2F[i,j] of
        'M' : player2Field.Cells[i,j] := '';
        'K' : player2Field.Cells[i,j] := 'S';
      End;
      // player1Field.Cells[i,j] := Form1.P1F[j,i];
    end;
  end;

end;

procedure TFieldForm.player1FieldDrawCell(Sender: TObject; ACol, ARow: Integer;
  Rect: TRect; State: TGridDrawState);
begin
  with player1Field do
  begin
    if (Cells[ACol,ARow] = 'S')   then
    begin
      Canvas.Brush.Color:= RGB(82,158,235);//clBlue;
      Rect.Left:=Rect.Left-5;
      Canvas.FillRect(Rect);
    end;
    if (Cells[ACol,ARow] = '') then
    begin
      Canvas.Brush.Color:=clWhite;
      Rect.Left:=Rect.Left-5;
      Canvas.FillRect(Rect);
    end;
    if ((ACol = 0) and (ARow = 0)) then
    begin
      Canvas.Brush.Color:=clWhite;
      Rect.Left:=Rect.Left-5;
      Canvas.FillRect(Rect);
    end;
  end;
end;


procedure TFieldForm.player2FieldDrawCell(Sender: TObject; ACol, ARow: Integer;
  Rect: TRect; State: TGridDrawState);
begin
  with player2Field do
  begin
    if (Cells[ACol,ARow] = 'S')   then
    begin
      Canvas.Brush.Color:= RGB(82,158,235);//clBlue;
      Rect.Left:=Rect.Left-5;
      Canvas.FillRect(Rect);
    end;
    if (Cells[ACol,ARow] = 'R')   then
    begin
      Canvas.Brush.Color:= RGB(255,170,55);//Orange;
      Rect.Left:=Rect.Left-10;
      Canvas.FillRect(Rect);
    end;
    if (Cells[ACol,ARow] = 'K')   then
    begin
      Canvas.Brush.Color:= clRed;//Red;
      Rect.Left:=Rect.Left-5;
      Canvas.FillRect(Rect);
    end;
    if (Cells[ACol,ARow] = '') then
    begin
      Canvas.Brush.Color:=clWhite;
      Rect.Left:=Rect.Left-5;
      Canvas.FillRect(Rect);
    end;
    if ((ACol = 0) and (ARow = 0)) then
    begin
      Canvas.Brush.Color:=clWhite;
      Rect.Left:=Rect.Left-5;
      Canvas.FillRect(Rect);
    end;
    if(Cells[ACol,ARow] = '*') then
    begin
      Canvas.Brush.Color:=clWhite;
      Canvas.FillRect(Rect);
      Canvas.TextOut(Rect.Left+10, Rect.Top+5, 'ï');
    end;
  end;
end;


procedure TFieldForm.player2FieldMouseDown(Sender: TObject;
  Button: TMouseButton; Shift: TShiftState; X, Y: Integer);
var
  ACol, ARow: Integer;
  procedure KillShip(x,y:Byte);
    var flag, iskilled:Boolean;
    i,j,lasttop, lastdown,lastleft,lastright:byte;
  begin
     if ((Form1.P2F[x+1, y] = 'K') or (Form1.P2F[x-1, y] = 'K')) then
      begin
        flag:=True;
        isKilled:=true;
        i:=1;
        while(flag) do
        begin
          if ((Form1.P2F[x-i, y] = 'K') and (player2Field.Cells[x-i, y] <> 'R')) then
          begin
            isKilled:=false;
            flag:=false;
          end
          else
          begin
            if (Form1.P2F[x-i, y] <> 'K') then
            begin
              flag:=false;
              lastdown:=x-i+1;
            end;
          end;
          Inc(i);
        end;
        flag:=True;
        i:=1;
        while(flag and isKilled) do
        begin
          if ((Form1.P2F[x+i, y] = 'K') and (player2Field.Cells[x+i, y] <> 'R')) then
          begin
            isKilled:=false;
            flag:=false;
          end
          else
          begin
            if (Form1.P2F[x+i, y] <> 'K') then
            begin
              flag:=false;
              lasttop:=x+i-1;
            end;
          end;
          Inc(i);
        end;
        if(iskilled) then
        begin
          for j:=lastdown to lasttop do
          begin
            player2Field.Cells[j, y] := 'K';
          end;
        end;
      end
      else
      begin
        if ((Form1.P2F[x, y+1] = 'K') or (Form1.P2F[x, y-1] = 'K')) then
        begin
          flag:=True;
          isKilled:=true;
          i:=1;
          while(flag) do
          begin
            if ((Form1.P2F[x, y-i] = 'K') and (player2Field.Cells[x, y-i] <> 'R')) then
            begin
              isKilled:=false;
              flag:=false;
            end
            else
            begin
              if (Form1.P2F[x, y-i] <> 'K') then
              begin
                flag:=false;
                lastleft:=y-i+1;
              end;
            end;
            Inc(i);
          end;
          flag:=True;
          i:=1;
          while(flag and isKilled) do
          begin
            if ((Form1.P2F[x, y+i] = 'K') and (player2Field.Cells[x, y+i] <> 'R')) then
            begin
              isKilled:=false;
              flag:=false;
            end
            else
            begin
              if (Form1.P2F[x, y+i] <> 'K') then
              begin
                flag:=false;
                lastright:=y+i-1;
              end;
            end;
            Inc(i);
          end;
          if(iskilled) then
          begin
            for j:=lastleft to lastright do
            begin
              player2Field.Cells[x, j] := 'K';
            end;
          end;
        end
        else
        begin
          player2Field.Cells[x, y] := 'K';
        end;
      end;
  end;
begin
  if (currplayer = 1) then
  begin
    player2Field.MouseToCell(X, Y, ACol, ARow);
    if( (ACol <> 0) and (ARow <> 0)) then
    begin
      // ShowMessage(IntToStr(ACol));
      if (player2Field.Cells[ACol,ARow] = '') then
      begin
        // “”“ œ”—“Œ≈ œŒÀ≈
        player2Field.Cells[ACol,ARow] := '*';
        currplayer:=2;
      end
      else
      begin
        case player2Field.Cells[ACol,ARow][1] of
          '*','R','K': ShowMessage('“˚ ÛÊÂ ÒÚÂÎˇÎ Ò˛‰‡ :c');
          'S':   // Ã€ œŒœ¿À»!!!
          begin
            player2Field.Cells[ACol,ARow] := 'R';
            KillShip(ACol,ARow);
          end;
          else ShowMessage('error :C');
        end;
        {if(player2Field.Cells[ACol,ARow] = '*') then
        begin

        end
        else
        begin
          player2Field.Cells[ACol,ARow] := '*';
        end;  }

      end;
    end;
  end;
  if (currplayer = 2) then
  begin
    ShowMessage('—ÚÂÎˇÂÚ œ¿–¿ÃŒÿ ¿!!!!');
    currplayer:=1;
  end;
end;

end.
