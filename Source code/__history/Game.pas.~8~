unit Game;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.Grids, Vcl.ExtCtrls, Vcl.StdCtrls,
  Vcl.Imaging.pngimage;

type
  TFieldForm = class(TForm)
    player1Field: TStringGrid;
    player2Field: TStringGrid;
    Panel2: TPanel;
    pn2: TPanel;
    pnName1: TLabel;
    imgAI: TImage;
    Label1: TLabel;
    lbP2N: TLabel;
    lbP1N: TLabel;
    lbWalk: TLabel;
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure FormShow(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure player1FieldDrawCell(Sender: TObject; ACol, ARow: Integer;
      Rect: TRect; State: TGridDrawState);
    procedure player2FieldDrawCell(Sender: TObject; ACol, ARow: Integer;
      Rect: TRect; State: TGridDrawState);
    procedure player2FieldMouseDown(Sender: TObject; Button: TMouseButton;
      Shift: TShiftState; X, Y: Integer);

  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  FieldForm: TFieldForm;
  currplayer: 1..2;
  P1N, P2N: 1..20;
  LSX, LSY: byte;

implementation

{$R *.dfm}

uses MainPage, CreateField;

procedure TFieldForm.FormClose(Sender: TObject; var Action: TCloseAction);
begin
  {form1.close;
  Form3.close; }
end;

procedure TFieldForm.FormCreate(Sender: TObject);
var i:byte;
begin
  for i:=1 to 10 do
  begin
    player1Field.Cells[i,0]:=IntToStr(i);
    player1Field.Cells[0,i]:=Chr(1039+i);
    player2Field.Cells[i,0]:=IntToStr(i);
    player2Field.Cells[0,i]:=Chr(1039+i);
  end;
  player2Field.Cells[0,10]:='К';
  player1Field.Cells[0,10]:='К';
  currplayer:=1;
  P1N := 20;
  P2N := 20;
end;

procedure TFieldForm.FormShow(Sender: TObject);
var i,j:Byte;
begin
  pnName1.Caption := Form3.UserName;
  // ShowMessage(Form3.UserName);
  for i:=1 to 10 do
  begin
    for j:=1 to 10 do
    begin
      Case Form1.P1F[i,j] of
        'M' : player1Field.Cells[i,j] := '';
        'K' : player1Field.Cells[i,j] := 'S';
      End;
      Case Form1.P2F[i,j] of
        'M' : player2Field.Cells[i,j] := '';
        'K' : player2Field.Cells[i,j] := 'S';
      End;
      // player1Field.Cells[i,j] := Form1.P1F[j,i];
    end;
  end;
  lbWalk.Caption := 'Ходит: ' + form3.UserName;
  LSX:=0;
  LSY:=0;
end;

procedure TFieldForm.player1FieldDrawCell(Sender: TObject; ACol, ARow: Integer;
  Rect: TRect; State: TGridDrawState);
begin
  with player1Field do
  begin
    if(Cells[ACol,ARow] = '*') then
    begin
      Canvas.Brush.Color:=clWhite;
      Canvas.FillRect(Rect);
      Canvas.TextOut(Rect.Left+10, Rect.Top+5, '•');
    end;
    if (Cells[ACol,ARow] = 'S')   then
    begin
      Canvas.Brush.Color:= RGB(82,158,235);//clBlue;
      Rect.Left:=Rect.Left-5;
      Canvas.FillRect(Rect);
    end;
    if (Cells[ACol,ARow] = '') then
    begin
      Canvas.Brush.Color:=clWhite;
      Rect.Left:=Rect.Left-5;
      Canvas.FillRect(Rect);
    end;
    if (Cells[ACol,ARow] = 'R')   then
    begin
      Canvas.Brush.Color:= RGB(255,170,55);//Orange;
      Rect.Left:=Rect.Left-10;
      Canvas.FillRect(Rect);
    end;
    if (Cells[ACol,ARow] = 'K')   then
    begin
      Canvas.Brush.Color:= clRed;//Red;
      Rect.Left:=Rect.Left-5;
      Canvas.FillRect(Rect);
    end;
    if ((ACol = 0) and (ARow = 0)) then
    begin
      Canvas.Brush.Color:=clWhite;
      Rect.Left:=Rect.Left-5;
      Canvas.FillRect(Rect);
    end;
  end;
end;


procedure TFieldForm.player2FieldDrawCell(Sender: TObject; ACol, ARow: Integer;
  Rect: TRect; State: TGridDrawState);
begin
  with player2Field do
  begin
    if (Cells[ACol,ARow] = 'S')   then
    begin
      Canvas.Brush.Color:= clWhite;//RGB(82,158,235);//clBlue;
      Rect.Left:=Rect.Left-5;
      Canvas.FillRect(Rect);
    end;
    if (Cells[ACol,ARow] = 'R')   then
    begin
      Canvas.Brush.Color:= RGB(255,170,55);//Orange;
      Rect.Left:=Rect.Left-10;
      Canvas.FillRect(Rect);
    end;
    if (Cells[ACol,ARow] = 'K')   then
    begin
      Canvas.Brush.Color:= clRed;//Red;
      Rect.Left:=Rect.Left-5;
      Canvas.FillRect(Rect);
    end;
    if (Cells[ACol,ARow] = '') then
    begin
      Canvas.Brush.Color:=clWhite;
      Rect.Left:=Rect.Left-5;
      Canvas.FillRect(Rect);
    end;
    if ((ACol = 0) and (ARow = 0)) then
    begin
      Canvas.Brush.Color:=clWhite;
      Rect.Left:=Rect.Left-5;
      Canvas.FillRect(Rect);
    end;
    if(Cells[ACol,ARow] = '*') then
    begin
      Canvas.Brush.Color:=clWhite;
      Canvas.FillRect(Rect);
      Canvas.TextOut(Rect.Left+10, Rect.Top+5, '•');
    end;
  end;
end;


procedure TFieldForm.player2FieldMouseDown(Sender: TObject;
  Button: TMouseButton; Shift: TShiftState; X, Y: Integer);
var
  ACol, ARow: Integer;
  type TEM = array[1..10,1..10] of string;
  procedure KillShip(const fullmatrix: TPF; var EnemyMatrix: TStringGrid; const x,y:Byte);
    var flag, iskilled:Boolean;
    i,j,lasttop, lastdown,lastleft,lastright:byte;
  begin
      if ((fullmatrix[x+1, y] = 'K') or (fullmatrix[x-1, y] = 'K')) then
      begin
        flag:=True;
        isKilled:=true;
        i:=1;
        while(flag) do
        begin
          if ((fullmatrix[x-i, y] = 'K') and (EnemyMatrix.Cells[x-i, y] <> 'R')) then
          begin
            isKilled:=false;
            flag:=false;
          end
          else
          begin
            if (fullmatrix[x-i, y] <> 'K') then
            begin
              flag:=false;
              lastdown:=x-i+1;
            end;
          end;
          Inc(i);
        end;
        flag:=True;
        i:=1;
        while(flag and isKilled) do
        begin
          if ((fullmatrix[x+i, y] = 'K') and (EnemyMatrix.Cells[x+i, y] <> 'R')) then
          begin
            isKilled:=false;
            flag:=false;
          end
          else
          begin
            if (fullmatrix[x+i, y] <> 'K') then
            begin
              flag:=false;
              lasttop:=x+i-1;
            end;
          end;
          Inc(i);
        end;
        if(iskilled) then
        begin
          if (lastdown-1) in [1..10] then
            EnemyMatrix.Cells[lastdown-1, y] := '*';
          if (((lastdown-1) in [1..10]) and ((y+1) in [1..10])) then
            EnemyMatrix.Cells[lastdown-1, y+1] := '*';
          if (((lastdown-1) in [1..10]) and ((y-1) in [1..10])) then
            EnemyMatrix.Cells[lastdown-1, y-1] := '*';
          if (((lastdown+1) in [1..10]) and ((y+1) in [1..10])) then
            EnemyMatrix.Cells[lastdown+1, y+1] := '*';
          if (((lastdown+1) in [1..10]) and ((y-1) in [1..10])) then
            EnemyMatrix.Cells[lastdown+1, y-1] := '*';
          if (lastdown+1) in [1..10] then
            EnemyMatrix.Cells[lasttop+1, y] := '*';
          for j:=lastdown to lasttop do
          begin
            EnemyMatrix.Cells[j, y] := 'K';
            if (y+1) in [1..10] then
              EnemyMatrix.Cells[j, y+1] := '*';
            if (y-1) in [1..10] then
              EnemyMatrix.Cells[j, y-1] := '*';
          end;

          if(currplayer = 2) then
          begin
            LSX:=0;
            LSY:=0;
          end;
        end;
      end
      else
      begin
        if ((fullmatrix[x, y+1] = 'K') or (fullmatrix[x, y-1] = 'K')) then
        begin
          flag:=True;
          isKilled:=true;
          i:=1;
          while(flag) do
          begin
            if ((fullmatrix[x, y-i] = 'K') and (EnemyMatrix.Cells[x, y-i] <> 'R')) then
            begin
              isKilled:=false;
              flag:=false;
            end
            else
            begin
              if (fullmatrix[x, y-i] <> 'K') then
              begin
                flag:=false;
                lastleft:=y-i+1;
              end;
            end;
            Inc(i);
          end;
          flag:=True;
          i:=1;
          while(flag and isKilled) do
          begin
            if ((fullmatrix[x, y+i] = 'K') and (EnemyMatrix.Cells[x, y+i] <> 'R')) then
            begin
              isKilled:=false;
              flag:=false;
            end
            else
            begin
              if (fullmatrix[x, y+i] <> 'K') then
              begin
                flag:=false;
                lastright:=y+i-1;
              end;
            end;
            Inc(i);
          end;
          if(iskilled) then
          begin
            for j:=lastleft to lastright do
            begin
              EnemyMatrix.Cells[x, j] := 'K';
            end;
            LSX:=0;
            LSY:=0;
          end;
        end
        else
        begin
          EnemyMatrix.Cells[x, y] := 'K';
            LSX:=0;
            LSY:=0;
        end;
      end;
  end;
  procedure AIShotShotShot;
  var
    missed:Boolean;
    AIX, AIY: byte;
  begin
    missed := False;
    while (not missed) do
    begin
      repeat
        {if ((LSX <> 0) and (LSY <> 0)) then
        begin
          repeat
            AIX:=LSX;
            AIY:=LSY;
            case random(4) of
              1: Inc(AIX);
              2: Inc(AIY);
              3: Dec(AIX);
              4: Dec(AIY);
            end;
          until ((AIX in [1..10]) and (AIY in [1..10]) );
        end
        else }
        begin
          AIX := Random(10) +1;
          AIY := Random(10) +1;
        end;
      until ((player1Field.Cells[AIX,AIY] <> '*') and (player1Field.Cells[AIX,AIY] <> 'R') and (player1Field.Cells[AIX,AIY] <> 'K'));
      if player1Field.Cells[AIX,AIY] = '' then
      begin
        player1Field.Cells[AIX,AIY] := '*';
        missed:=true;
      end
      else
      begin
        if (player1Field.Cells[AIX,AIY] = 'S') then
        begin
          Dec(P1N);
          player1Field.Cells[AIX,AIY] := 'R';
          KillShip(Form1.P1F, player1Field,AIX,AIY);
          LSX:=AIX;
          LSY:=AIY;
          ShowMessage('Большой ИИ попал в тебя');
        end;
      end;

    end;
  end;
begin
  if (currplayer = 1) then
  begin
    player2Field.MouseToCell(X, Y, ACol, ARow);
    if( (ACol <> 0) and (ARow <> 0)) then
    begin
      // ShowMessage(IntToStr(ACol));
      if (player2Field.Cells[ACol,ARow] = '') then
      begin
        // ТУТ ПУСТОЕ ПОЛЕ
        player2Field.Cells[ACol,ARow] := '*';
        currplayer:=2;
        lbWalk.Caption := 'Ходит: ИИ';
      end
      else
      begin
        case player2Field.Cells[ACol,ARow][1] of
          '*','R','K': ShowMessage('Ты уже стрелял сюда :c');
          'S':   // МЫ ПОПАЛИ!!!
          begin
            Dec(P2N);
            player2Field.Cells[ACol,ARow] := 'R';
            KillShip(Form1.P2F, player2Field,ACol,ARow);
          end;
          else ShowMessage('error :C');
        end;
        {if(player2Field.Cells[ACol,ARow] = '*') then
        begin

        end
        else
        begin
          player2Field.Cells[ACol,ARow] := '*';
        end;  }

      end;
    end;
  end;
  if (currplayer = 2) then
  begin
    //ShowMessage('Стреляет ПАРАМОШКА!!!!');
    Sleep(300);
    AIShotShotShot;
    Currplayer := 1;
    lbWalk.Caption := 'Ходит: ' + form3.UserName;
  end;
  lbP1N.Caption := IntToStr(P1N);
  lbP2N.Caption := IntToStr(P2N);
  if ((P1N =  0) or (P2N = 0)) then
  begin
    ShowMessage('Game Over');
    if (P1N = 0) then
      ShowMessage('Парамошка победил, поэтому может и продолжать не выставлять модули');
  end;
end;

end.
